#!/usr/bin/perl
#
# Script to update your NameSilo domain record when it is loaded via http
#   so that you can have a sort of dynamic DNS
#
# Author: Clint Paden  Nov 2017

#### SETUP - YOU MUST CHANGE THESE VARIABLES ####
# The API Key must be generated by NameSilo
# Please see https://www.namesilo.com/account_api.php
my $apikey    = "" ;
# The local key is to insure that not just anyone runs the script. It can be anything
my $localkey = "";
# Domain refers to your basic domain name, not the subdomain, for xxx.example.com, you would enter "example.com"
my $domain    = ""  ;
# Subdomain is the subdomain you want to update, for xxx.example.com, you would enter "xxx"
my $subdomain = ""  ;
$subdomain = $query->param(sub) if ($query->param(sub));

use CGI::Carp qw(fatalsToBrowser);
use CGI qw(:standard);
use LWP::UserAgent;
use Data::Dumper;
use XML::Simple;

my $ua = LWP::UserAgent->new;
my $query = new CGI;
my $parser = new XML::Simple;

if ( $query->param(key) ne "$localkey" ) {
	print "Content-type: text/HTML\n\nUNAUTHORIZED ACCESS"; 
	exit;
}

print "Content-type: text/HTML\n\n";
my $t = $query->param(ip) // $ENV{REMOTE_ADDR}; 

my $api_records = "https://www.namesilo.com/api/dnsListRecords?version=1&type=xml&key=$apikey&domain=$domain";
my $xml_records = $ua->get($api_records) or die 'Unable to get URL';
my $data = $parser->XMLin($xml_records->{_content});

my $host_rec;
for my $i (@{$data->{reply}->{resource_record}}) {
	$host_rec = $i->{record_id} if $i->{host} =~/$subdomain\.$domain/;
}
my $update_url = "https://www.namesilo.com/api/dnsUpdateRecord?version=1&type=xml&key=$apikey&rrhost=$subdomain&domain=$domain&rrid=$host_rec&rrttl=3600&rrvalue=$t";
$ua->get($update_url) or die "Cannot get update URL";

print "<html><body><h1>SUCCESS</h1><br> IP address for $subdomain.$domain has been changed to $t.<br>";
print $update_url;
print "</body></html>";
